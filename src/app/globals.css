@import 'tailwindcss';

@custom-variant dark (&:where(.dark, .dark *));

@theme {
  --color-border: hsl(var(--border));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --animate-border-spin: border-spin 5s linear infinite;

  @keyframes border-spin {
    0% {
      left: 0%;
      top: 0%;
      transform: translate(-50%, -50%);
    }

    38% {
      left: 100%;
      top: 0%;
      transform: translate(-50%, -50%);
    }

    50% {
      left: 100%;
      top: 100%;
      transform: translate(-50%, -50%);
    }

    88% {
      left: 0%;
      top: 100%;
      transform: translate(-50%, -50%);
    }

    100% {
      left: 0%;
      top: 0%;
      transform: translate(-50%, -50%);
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  * {
    @apply border-border;
  }

  html {
    @apply scroll-smooth;
  }

  body {
    @apply bg-background text-foreground;
    text-rendering: optimizeLegibility;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 72.22% 50.59%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;

    --offset: 2px;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 85.7% 97.3%;
    --border: 240 3.7% 15.9%;
  }
}

@utility step {
  counter-increment: step;

  &:before {
    @apply absolute w-9 bg-muted h-9 rounded-full font-mono font-medium text-center text-base inline-flex items-center justify-center -indent-px border-4 border-background;
    @apply ml-[-50px] mt-[-4px];
    content: counter(step);
  }
}

@utility scrollbar-none {
  &::-webkit-scrollbar {
    scrollbar-width: none;
  }
}

@utility scrollbar-primary {
  &::-webkit-scrollbar {
    width: 5px;
  }

  &::-webkit-scrollbar-thumb {
    background: rgb(35, 35, 35);
    border-radius: 100vh;
  }
}

@utility scrollbar-secondary {
  &::-webkit-scrollbar {
    width: 0%;
  }

  &:hover::-webkit-scrollbar {
    width: 5px;
  }

  &::-webkit-scrollbar-thumb {
    background: rgb(35, 35, 35);
    border-radius: 100vh;
  }
}

@utility animated-border {
  &::before {
    background: radial-gradient(red, transparent 70%);
    top: calc(0px + var(--offset));
    left: calc(0px + var(--offset));
    @apply absolute content-[''] w-[50%] rounded-full aspect-square z-[-2] animate-border-spin;
  }

  &::after {
    inset: var(--offset);
    height: calc(100% -2 * var(--offset));
    width: calc(100% -2 * var(--offset));
    @apply absolute content-[''] bg-[inherit] rounded-[inherit] z-[-1];
  }
}

@utility bg-grid {
  background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' fill='none' xmlns='http://www.w3.org/2000/svg' stroke='%23FF0000'%3E%3Cpath d='M31.5 0L31.5 32M32 31.5L0 31.5' /%3E%3C/svg%3E");
}

@utility bg-dot {
  background-image: url("data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 50 50' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='5' cy='5' r='5' fill='%23FF0000'/%3E%3C/svg%3E");
}

@utility bg-wave {
  background-image: url("data:image/svg+xml,%3Csvg width='70' height='20' viewBox='0 0 100 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M 0 10 Q 25 0, 50 10 Q 75 20, 100 10' fill='none' stroke='%23FF0000' stroke-width='1' /%3E%3C/svg%3E");
}

@layer components {
  [data-rehype-pretty-code-figure] {
    @apply relative;
  }

  [data-rehype-pretty-code-figure] code {
    @apply grid min-w-full break-words rounded-none border-0 bg-transparent p-0;
    counter-reset: line;
    box-decoration-break: clone;
  }

  [data-rehype-pretty-code-figure] [data-line] {
    @apply p-px;
  }

  [data-rehype-pretty-code-figure] .line {
    @apply px-4 min-h-[1rem] py-0.5 w-full inline-block;
  }

  [data-rehype-pretty-code-figure] [data-line-numbers] .line {
    @apply px-2;
  }

  [data-rehype-pretty-code-figure] [data-line-numbers]>.line::before {
    @apply text-zinc-50/40 text-xs;
    counter-increment: line;
    content: counter(line);
    display: inline-block;
    width: 1.8rem;
    margin-right: 1.4rem;
    text-align: right;
  }

  [data-rehype-pretty-code-figure] .line--highlighted {
    @apply bg-zinc-700/50;
  }

  [data-rehype-pretty-code-figure] .line-highlighted span {
    @apply relative;
  }

  [data-rehype-pretty-code-figure] .word--highlighted {
    @apply rounded-md bg-zinc-700/50 border-zinc-700/70 p-1;
  }

  [data-rehype-pretty-code-title] {
    @apply mt-2 pt-6 px-4 text-sm font-medium;
  }

  [data-rehype-pretty-code-title]+pre {
    @apply mt-2;
  }

  .mdx>.steps:first-child>h3:first-child {
    @apply mt-0;
  }

  .steps>h3 {
    @apply mt-8 mb-4 text-base font-semibold;
  }
}

@layer components {
  :root {
    /* --border-color: 49 49 53; */
  }

  .radial-gradient {
    background:
      radial-gradient(circle at 50% 0%,
        rgba(250, 250, 250, 0.05) 0%,
        transparent 60%),
      rgba(15, 15, 15, 1);
  }

  .linear-mask {
    mask-image: linear-gradient(-75deg,
        white calc(var(--x) + 20%),
        transparent calc(var(--x) + 30%),
        white 60%);
    -webkit-mask-image: linear-gradient(-75deg,
        white calc(var(--x) + 15%),
        transparent calc(var(--x) + 25%),
        white 60%);
  }

  .linear-overlay {
    background-image: linear-gradient(-75deg,
        rgba(255, 255, 255, 0.1) calc(var(--x) + 20%),
        rgba(255, 255, 255, 0.5) calc(var(--x) + 25%),
        rgba(255, 255, 255, 0.1) calc(var(--x) + 100%));
    mask:
      linear-gradient(black, black) content-box,
      linear-gradient(black, black);
    -webkit-mask:
      linear-gradient(black, black) content-box,
      linear-gradient(black, black);
    mask-composite: exclude;
  }
}